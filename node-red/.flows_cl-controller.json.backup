[{"id":"a775a5b.b12bf58","type":"tab","label":"Flow 1"},{"id":"f25e104b.6303e","type":"http in","z":"a775a5b.b12bf58","name":"opi0cluster","url":"/opi0cluster","method":"get","upload":false,"swaggerDoc":"","x":60,"y":40,"wires":[["c02468ac.34bdf8","169919ec.4dc2e6"]]},{"id":"c02468ac.34bdf8","type":"function","z":"a775a5b.b12bf58","name":"","func":"function getNow(){\n    var d = new Date();\n    var n = d.getTime();\n    return n;    \n}\nvar timeoutdelayseconds =60;\nvar now = getNow();\nmsg.payload.fun = \"\";\n\n//take care of globals so we can work with locals\n    lTable = global.get(\"table\");\n    \n    if (lTable === undefined){\n        msg.payload.fun += \"undefined \";\n        lTable = [];\n        for (var i=0;i<255;i=i+1){\n            lTable[i] = {\"position\":i,\"mac\":\"default\",\"timeout\":now};\n        }\n        global.set(\"table\", lTable);\n    }else{\n        msg.payload.fun += \"defined \";\n    }\n    \nvar lTable = global.get(\"table\");\nvar use =0;\nfor (var i=1;i<255;i=i+1){\n    if (lTable[i].mac == msg.payload.register){\n        use = i;\n        msg.payload.fun += \"already registered \";\n        break;\n    }\n    if (lTable[i].timeout <= getNow()){\n        use = i;\n        break;\n    }\n    \n}\n \nlTable[use].timeout = getNow()+(1000*timeoutdelayseconds);\nlTable[use].timeleft = lTable[use].timeout- getNow();\nlTable[use].mac = msg.payload.register;\nlTable[use].khash = msg.payload.khash;\n\nglobal.set(\"table\", lTable);\n        \nmsg.payload.number = lTable[use].position;\nreturn msg;","outputs":1,"noerr":0,"x":210,"y":80,"wires":[["c4a74422.f6d478","169919ec.4dc2e6"]]},{"id":"c4a74422.f6d478","type":"http response","z":"a775a5b.b12bf58","name":"","statusCode":"","headers":{},"x":310,"y":40,"wires":[]},{"id":"169919ec.4dc2e6","type":"debug","z":"a775a5b.b12bf58","name":"","active":true,"console":"false","complete":"payload","x":210,"y":140,"wires":[]},{"id":"6cd1079b.915798","type":"http in","z":"a775a5b.b12bf58","name":"","url":"/monitor","method":"get","upload":false,"swaggerDoc":"","x":70,"y":220,"wires":[["eae6efe7.6c184"]]},{"id":"5d16ba00.7a2428","type":"http response","z":"a775a5b.b12bf58","name":"","statusCode":"","headers":{},"x":470,"y":220,"wires":[]},{"id":"eae6efe7.6c184","type":"function","z":"a775a5b.b12bf58","name":"","func":"function getNow(){\n    var d = new Date();\n    var n = d.getTime();\n    return n;    \n}\nlTable = global.get(\"table\");\n  if (lTable === undefined){\n     msg.payload.fun = \"undefined\"; \n  }else{\n    msg.payload.table = global.get(\"table\"); \n    }\n    \n    for (var i=0;i<255;i=i+1){\n        lTable[i].timeleft =(lTable[i].timeout-getNow())/1000;\n    }\n    \nreturn msg;","outputs":1,"noerr":0,"x":210,"y":220,"wires":[["5a92a192.ba73f","6ba465ec.eef2cc"]]},{"id":"5a92a192.ba73f","type":"debug","z":"a775a5b.b12bf58","name":"","active":true,"console":"false","complete":"false","x":370,"y":320,"wires":[]},{"id":"6ba465ec.eef2cc","type":"template","z":"a775a5b.b12bf58","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<script>setTimeout(function(){\n   window.location.reload(1);\n}, 5000);\n</script>\n<table border=\"1px\">\n    {{#payload.table}}\n    <tr>\n    <td>{{position}}</td>\n        <td>{{khash}}</td>\n            <td>{{mac}}</td>\n                <td>{{timeleft}}</td>\n    </tr>\n    {{/payload.table}}\n    </table>","output":"str","x":350,"y":220,"wires":[["5d16ba00.7a2428"]]},{"id":"19b46301.8b17dd","type":"function","z":"a775a5b.b12bf58","name":"getNow","func":"function getNow(){\n    var d = new Date();\n    var n = d.getTime();\n    return n;    \n}","outputs":1,"noerr":0,"x":149.16668701171875,"y":496,"wires":[[]]},{"id":"cba4d84.345ae28","type":"http in","z":"a775a5b.b12bf58","name":"","url":"/log","method":"get","upload":false,"swaggerDoc":"","x":63.16667175292969,"y":311.3333435058594,"wires":[["8d3acaee.6e11d8"]]},{"id":"8d3acaee.6e11d8","type":"function","z":"a775a5b.b12bf58","name":"","func":"msg.payload.result = \"ok\";\nmsg.payload.date=Date();\n//msg = new Buffer('hello world', 'utf8');\nreturn msg;","outputs":1,"noerr":0,"x":210,"y":360,"wires":[["c04b50c.efb43b","e3f8f6f5.d704e8","c6426b9b.7f64f8"]]},{"id":"c04b50c.efb43b","type":"http response","z":"a775a5b.b12bf58","name":"","statusCode":"","headers":{},"x":410,"y":360,"wires":[]},{"id":"e3f8f6f5.d704e8","type":"debug","z":"a775a5b.b12bf58","name":"LOG","active":true,"console":"false","complete":"payload","x":390,"y":480,"wires":[]},{"id":"c6426b9b.7f64f8","type":"file","z":"a775a5b.b12bf58","name":"","filename":"/node-red-log.log","appendNewline":true,"createDir":true,"overwriteFile":"false","x":371.16668701171875,"y":556.6666870117188,"wires":[]}]